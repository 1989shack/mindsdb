language: python
services:
  - docker
matrix:
  include:
    - name: "Python 3.7.3 on Ubuntu 16.0.4"
      os: linux
      python: 3.7.3
      node: 11.15.0
      dist: xenial
      sudo: true
      env:
        DEPLOYMENT_ENV="true"
      
    - name: "Python 3.7.2 on OSX"
      os: osx
      language: shell
      dist: xcode10.2

notifications:
  # send notifications only on master failure
  email:
    only: master
cache: pip
# install dependencies
install:
  - travis_wait pip3 install --upgrade pip
  - travis_wait pip3 install --no-cache-dir -e .

before_script: cd tests/ci_tests
# run tests
script:
  - python3 test_endpoints.py
  - cd ../..

# deploy to pip
deploy:
  - provider: pypi
    user: "mindsdb_sysadmin"
    password: $PYPI_SYSADMIN_PASSWORD
    distributions: "sdist"
    on:
      branch: master
      condition: $DEPLOYMENT_ENV = "true"
      
# after pip is deployed, we can deploy to dockerhub
after_deploy:
  -  if [[ "$DEPLOYMENT_ENV" = "true" && "$TRAVIS_BRANCH" = "master" ]]; then sleep 15; fi
  -  if [[ "$DEPLOYMENT_ENV" = "true" && "$TRAVIS_BRANCH" = "master" ]]; then cd distributions/docker; fi
  -  if [[ "$DEPLOYMENT_ENV" = "true" && "$TRAVIS_BRANCH" = "master" ]]; then docker build -t docker-build .; fi
  -  if [[ "$DEPLOYMENT_ENV" = "true" && "$TRAVIS_BRANCH" = "master" ]]; then docker tag docker-build $REGISTRY_USER/mindsdb_server:latest; fi
  -  if [[ "$DEPLOYMENT_ENV" = "true" && "$TRAVIS_BRANCH" = "master" ]]; then cd ../..; fi
  -  if [[ "$DEPLOYMENT_ENV" = "true" && "$TRAVIS_BRANCH" = "master" ]]; then docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS" && docker push $REGISTRY_USER/mindsdb_server && docker logout; fi
